name: simple workflow

on:
  push:
    branches:
      - "main"

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_ACCESS_TOKEN }}
  GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
  GOOGLE_REGION: ${{ vars.GOOGLE_REGION }}
  IMAGE: overweight-hello

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_GCP_PROJECT_ID: ${{ vars.GOOGLE_PROJECT }}
      TF_VAR_GCP_PROJECT_REGION: ${{ vars.GOOGLE_REGION }}
      TF_VAR_GCP_PROJECT_ZONE: ${{ vars.GOOGLE_ZONE }}
    outputs:
      repo: ${{ steps.output.outputs.test }}  
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      - 
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - 
        name: Terraform Init
        run: terraform -chdir=terraform/ init
      - 
        name: Terraform Apply
        run: terraform -chdir=terraform/ apply --auto-approve
      - 
        id: output
        run: echo "test=$(terraform -chdir=terraform/ output -raw docker_repository)" >> $GITHUB_OUTPUT
  push_to_registry:
    name: Package app in Docker and push to registry
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v3
      - 
        name: build
        run: docker build -t ${{ needs.terraform.outputs.repo }}/${{ env.IMAGE }}:$(cat app/__version__) app/
      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: ${{ needs.terraform.outputs.repo }}
          username: _json_key
          password: ${{ secrets.GCP_ACCESS_TOKEN }}
      - 
        name: push
        run:  docker push ${{ needs.terraform.outputs.repo }}/${{ env.IMAGE }}:$(cat app/__version__)