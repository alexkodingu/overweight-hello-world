name: simple workflow

on:
  push:
    branches:
      - "main"

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_ACCESS_TOKEN }}
  GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
  GOOGLE_REGION: ${{ vars.GOOGLE_REGION }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_GCP_PROJECT_ID: ${{ vars.GOOGLE_PROJECT }}
      TF_VAR_GCP_PROJECT_REGION: ${{ vars.GOOGLE_REGION }}
      TF_VAR_GCP_PROJECT_ZONE: ${{ vars.GOOGLE_ZONE }}
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      -
        run: |
          $Repo = "${{ github.repository }}"
          $BaseUri = "https://api.github.com"
          $ArtifactUri = "$BaseUri/repos/$Repo/actions/artifacts"
          $Token = "${{ github.token }}" | ConvertTo-SecureString -AsPlainText
          $RestResponse = Invoke-RestMethod -Authentication Bearer -Uri $ArtifactUri -Token $Token | Select-Object -ExpandProperty artifacts
          if ($RestResponse){
            $MostRecentArtifactURI = $RestResponse | Sort-Object -Property created_at -Descending | where name -eq "terraformstatefile" | Select-Object -First 1 | Select-Object -ExpandProperty archive_download_url
            Write-Host "Most recent artifact URI = $MostRecentArtifactURI"
            if ($MostRecentArtifactURI){
              Invoke-RestMethod -uri $MostRecentArtifactURI -Token $Token -Authentication bearer -outfile ./state.zip
              Expand-Archive ./state.zip
              mv ./state.zip/terraform.tfstate ./terraform/terraform.tfstate 
            }
          }
      -
        uses: hashicorp/setup-terraform@v1
      - 
        name: Terraform Init
        run: terraform -chdir=terraform/ init
      - 
        name: Terraform Apply
        run: terraform -chdir=terraform/ apply --auto-approve
      - 
        uses: actions/upload-artifact@v2
        with:
          name: terraformstatefile
          path: ./terraform/terraform.tfstate
